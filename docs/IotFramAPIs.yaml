openapi: 3.0.2
info:
  title: Iot Farm APIs
  description: API documents for Iot Farm system.
  version: 1.0.0
  license:
    name: GNU General Public License v3.0
    url: https://www.gnu.org/licenses/gpl-3.0.html
servers:
  - url: http://127.0.0.1:8000
    description: Development server
tags:
  - name: Auth
    description: Authentication APIs
  - name: Users
    description: User APIs, handled by `superuser` role.
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterRequest:
      type: object
      description: Request body for registering a new user join to system.
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits
            and @/./+/-/_ only.
          pattern: ^[\w.@+-]+\Z
          maxLength: 150
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          description: Required. For notifying users.
          maxLength: 254
        mobile:
          type: string
          pattern: ^(\+84|0)\d{9}$
          maxLength: 12
          description: Required.
        password:
          type: string
          maxLength: 128
          description: Required.
        password_confirm:
          type: string
          maxLength: 128
          description: Required.
      required:
      - username
      - email
      - mobile
      - password
      - password_confirm
    RegisterResponse:
      type: object
      description: Response body for registering a new user join to system.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits
            and @/./+/-/_ only.
          pattern: ^[\w.@+-]+\Z
          maxLength: 150
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        mobile:
          type: string
          pattern: ^(\+84|0)\d{9}$
          maxLength: 12
        password:
          type: string
          maxLength: 128
    VerifyRegistrationRequest:
      type: object
      description: Request body for Verifing Registration a new user join to system.
      properties:
        user_id:
          type: string
        timestamp:
          type: integer
        signature:
          type: string
      required:
      - user_id
      - timestamp
      - signature
    VerifyRegistrationResponse:
      type: object
      description: Response body for Verifing Registration a new user join to system.
      properties:
        detail:
          type: string
      example:
        detail: User verified successfully
    SendResetPasswordLinkRequest:
      type: object
      description: Request body for Sending Reset Password Link.
      properties:
        login:
          type: string
      required:
      - login
    SendResetPasswordLinkResponse:
      type: object
      description: Response body for Sending Reset Password Link.
      properties:
        detail:
          type: string
      example:
        detail: Reset link sent
    ResetPasswordRequest:
      type: object
      description: Request body for Reset Password.
      properties:
        user_id:
          type: string
        timestamp:
          type: integer
        signature:
          type: string
        password:
          type: string
      required:
      - user_id
      - timestamp
      - signature
      - password
    ResetPasswordResponse:
      type: object
      description: Response body for Reset Password.
      properties:
        detail:
          type: string
      example:
        detail: Reset password successful
    LoginRequest:
      type: object
      description: request body for API `/auth/login`
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - username
      - password
    RefreshLoginRequest:
      type: object
      description: request body for API `/auth/refresh`
      properties:
        refresh:
          type: string
          format: jwt
      required:
        - refresh
    TokenObtainPairResponse:
      type: object
      description: Response body for both APIs `/auth/login` and `/auth/refresh`
      properties:
        refresh:
          type: string
          format: jwt
          description: The refresh token
        access:
          type: string
          format: jwt
          description: The access token
    CreateUserRequest:
      type: object
      description: Request body for registering a new user join to system.
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits
            and @/./+/-/_ only.
          pattern: ^[\w.@+-]+\Z
          maxLength: 150
        password:
          type: string
          maxLength: 128
          minLength: 8
          pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%\^&*?])[A-Za-z\d!@#$%\^&*?]{8,}
        email:
          type: string
          format: email
          description: Required. For notifying users.
          maxLength: 254
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        mobile:
          type: string
          pattern: \d+
          maxLength: 12
        address:
          type: string
          nullable: true
          description: User address
          maxLength: 200
      required:
      - username
      - password
      - email
      - mobile
    UpdateUserRequest:
      type: object
      description: Request body for updating user.
      properties:
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        mobile:
          type: string
          pattern: ^(\+84|0)\d{9}$
          maxLength: 12
        address:
          type: string
          nullable: true
          description: User address
          maxLength: 200
        role:
          type: string
          nullable: true
        is_active:
          type: boolean
          description: Designates whether this user should be treated as active.
            Unselect this instead of deleting accounts.
      required:
      - mobile
    PartialUpdateUserRequest:
      type: object
      description: Request body for partial update user.
      properties:
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        mobile:
          type: string
          pattern: \d+
          maxLength: 12
        address:
          type: string
          nullable: true
          description: User address
          maxLength: 200
        is_active:
          type: boolean
          description: Designates whether this user should be treated as active.
            Unselect this instead of deleting accounts.
    UserDetailResponse:
      type: object
      description: Response body for `list`, `create`, `retrieve`, `update` and `partial update` actions
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters,
            digits and @/./+/-/_ only.
        email:
          type: string
          format: email
          readOnly: true
          description: Required. For notifying users.
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        mobile:
          type: string
          pattern: \d+
          maxLength: 12
        address:
          type: string
          nullable: true
          description: User address
          maxLength: 200
        avatar:
          type: string
          format: binary
          readOnly: true
          description: User avatar
        created_at:
          type: string
          format: date-time
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
        last_login:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
          description: Designates whether this user should be treated
            as active. Unselect this instead of deleting accounts.
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          readOnly: true
    UserProfileDetailRequest:
      type: object
      description: Request body for updating and partial updating Profile User
        by himself and herself.
      properties:
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        mobile:
          type: string
          pattern: \d+
          maxLength: 12
        address:
          type: string
          nullable: true
          description: User address
          maxLength: 200
        avatar:
          type: string
          format: binary
          nullable: true
          description: User avatar
      required:
      - mobile
    UserProfileDetailResponse:
      type: object
      description: Response body get Profile User by himself and herself.
      properties:
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits
            and @/./+/-/_ only.
        email:
          type: string
          format: email
          readOnly: true
          description: Required. For notifying users.
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        mobile:
          type: string
          pattern: \d+
          maxLength: 12
        address:
          type: string
          nullable: true
          description: User address
          maxLength: 200
        avatar:
          type: string
          format: binary
          nullable: true
          description: User avatar
        date_joined:
          type: string
          format: date-time
          readOnly: true
        last_login:
          type: string
          format: date-time
          readOnly: true
    UserChangePasswordRequest:
      type: object
      description: Request body for the user changes his or her password.
      properties:
        old_password:
          type: string
        password:
          type: string
        password_confirm:
          type: string
      required:
      - old_password
      - password
      - password_confirm
    UserChangePasswordResponse:
      type: object
      description: Response body for the user changes his or her password.
      properties:
        detail:
          type: string
      example:
        detail: Password changed successfully
security:
  - bearerAuth: []
paths:
  /auth/register:
    post:
      tags:
        - Auth
      operationId: CreateDefaultRegisterUser
      summary: Register new user.
      description: Register new user.
      parameters: []
      security: []
      requestBody:
        content:
          application/json:
            schema: &id005
              $ref: '#/components/schemas/RegisterRequest'
          multipart/form-data:
            schema: *id005
          '*/*':
            schema: *id005
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
          description: ''
  /auth/verify-registration:
    post:
      tags:
        - Auth
      operationId: CreateVerifyRegistration
      summary: Verify Registration.
      description: Verify registration via signature.
      parameters: []
      security: []
      requestBody:
        content:
          application/json:
            schema: &id006
              $ref: '#/components/schemas/VerifyRegistrationRequest'
          multipart/form-data:
            schema: *id006
          '*/*':
            schema: *id006
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyRegistrationResponse'
          description: ''
  /auth/send-reset-password-link:
    post:
      tags:
        - Auth
      operationId: CreateDefaultSendResetPasswordLink
      summary: Send email with reset password link.
      description: Send email with reset password link.
      parameters: []
      security: []
      requestBody:
        content:
          application/json:
            schema: &id007
              $ref: '#/components/schemas/SendResetPasswordLinkRequest'
          multipart/form-data:
            schema: *id007
          '*/*':
            schema: *id007
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendResetPasswordLinkResponse'
          description: ''
  /auth/reset-password:
    post:
      tags:
        - Auth
      operationId: CreateResetPassword
      summary: Reset password.
      description: Reset password, given the signature and timestamp from the link.
      parameters: []
      security: []
      requestBody:
        content:
          application/json:
            schema: &id008
              $ref: '#/components/schemas/ResetPasswordRequest'
          multipart/form-data:
            schema: *id008
          '*/*':
            schema: *id008
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordResponse'
          description: ''
  /auth/login:
    post:
      tags:
        - Auth
      operationId: CreateTokenObtainPair
      summary: Login to the system with the given credentials.
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      security: []
      requestBody:
        content:
          application/json:
            schema: &id009
              $ref: '#/components/schemas/LoginRequest'
          multipart/form-data:
            schema: *id009
          '*/*':
            schema: *id009
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPairResponse'
          description: ''
  /auth/refresh:
    post:
      tags:
        - Auth
      operationId: CreateTokenRefresh
      summary: Refresh the system credentials.
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema: &id010
              $ref: '#/components/schemas/RefreshLoginRequest'
          multipart/form-data:
            schema: *id010
          '*/*':
            schema: *id010
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPairResponse'
          description: ''
  /auth/logout:
    post:
      tags:
        - Auth
      operationId: CreateOutstandingToken
      summary: Logout of system.
      description: Logout of system.
      parameters: []
      requestBody:
        content:
          application/json:
            schema: &id011
              $ref: '#/components/schemas/RefreshLoginRequest'
          multipart/form-data:
            schema: *id011
          '*/*':
            schema: *id011
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                nullable: true
          description: ''
  /auth/me:
    get:
      tags:
        - Auth
      operationId: RetrieveUser
      summary: User get and update Profile by himself or herself
      description: User get and update Profile by himself or herself.
      parameters: []
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileDetailResponse'
          description: ''
    put:
      tags:
        - Auth
      operationId: UpdateUser
      summary: User get and update Profile by himself or herself
      description: User get and update Profile by himself or herself.
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileDetailRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileDetailResponse'
          description: ''
    patch:
      tags:
        - Auth
      operationId: PartialUpdateUser
      summary: User update Profile by himself or herself.
      description: User get and update Profile by himself or herself.
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileDetailRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileDetailResponse'
          description: ''
  /auth/me/change-password:
    post:
      tags:
        - Auth
      operationId: CreateChangePassword
      summary: User changes his or her password.
      description: Change the user password.
      parameters: []
      requestBody:
        content:
          application/json:
            schema: &id012
              $ref: '#/components/schemas/UserChangePasswordRequest'
          multipart/form-data:
            schema: *id012
          '*/*':
            schema: *id012
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserChangePasswordResponse'
          description: ''
  /users:
    get:
      tags:
        - Users
      operationId: listUsers
      summary: Get users.
      description: 'User APIs, handled by `superuser` role.

        This viewset automatically provides `list`, `create`, `retrieve`, `update`,
        `destroy` and `change_password` actions.'
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                  previous:
                    type: string
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserDetailResponse'
          description: ''
    post:
      tags:
        - Users
      operationId: createUser
      summary: Create user.
      description: 'User APIs, handled by `superuser` role.

        This viewset automatically provides `list`, `create`, `retrieve`, `update`,
        `destroy` and `change_password` actions.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema: &id001
              $ref: '#/components/schemas/CreateUserRequest'
          multipart/form-data:
            schema: *id001
          '*/*':
            schema: *id001
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailResponse'
          description: ''
  /users/{id}:
    get:
      tags:
        - Users
      operationId: retrieveUser
      summary: Get user detail.
      description: 'User APIs, handled by `superuser` role.

        This viewset automatically provides `list`, `create`, `retrieve`, `update`,
        `destroy` and `change_password` actions.'
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this user.
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailResponse'
          description: ''
    put:
      tags:
        - Users
      operationId: updateUser
      summary: Update user.
      description: User APIs, handled by `superuser` role.

        This viewset automatically provides `list`, `create`, `retrieve`, `update`,
        `destroy` and `change_password` actions.
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this user.
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id002
              $ref: '#/components/schemas/UpdateUserRequest'
          multipart/form-data:
            schema: *id002
          '*/*':
            schema: *id002
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailResponse'
          description: ''
    patch:
      tags:
        - Users
      operationId: partial_updateUser
      summary: Partial update user.
      description: User APIs, handled by `superuser` role.

        This viewset automatically provides `list`, `create`, `retrieve`, `update`,
        `destroy` and `change_password` actions.
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this user.
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id003
              $ref: '#/components/schemas/PartialUpdateUserRequest'
          multipart/form-data:
            schema: *id003
          '*/*':
            schema: *id003
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailResponse'
          description: ''
    delete:
      tags:
        - Users
      operationId: destroyUser
      summary: Delete user.
      description: User APIs, handled by `superuser` role.

        This viewset automatically provides `list`, `create`, `retrieve`, `update`,
        `destroy` and `change_password` actions.
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this user.
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      responses:
        204:
          description: ''
  /users/{id}/change-password:
    post:
      tags:
        - Users
      operationId: change_passwordUser
      summary: Change user password.
      description: User APIs, handled by `superuser` role.

        This viewset automatically provides `list`, `create`, `retrieve`, `update`,
        `destroy` and `change_password` actions.
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id004
              properties:
                password:
                  type: string
                  maxLength: 128
                  minLength: 8
                  pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%\^&*?])[A-Za-z\d!@#$%\^&*?]{8,}
              required:
              - password
          multipart/form-data:
            schema: *id004
          '*/*':
            schema: *id004
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  detail:
                    type: string
                example:
                  detail: The user password changed successfully
          description: ''
  